// https://www.acmicpc.net/problem/2179
package baekjoon;

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] words = new String[n];

        for (int i = 0; i < n; i++) {
            words[i] = sc.next();
        }

        int maxLen = -1;
        int a = 0, b = 1;

        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int len = commonPrefix(words[i], words[j]);
                if (len > maxLen ||
                    (len == maxLen && (i < a || (i == a && j < b)))) {
                    maxLen = len;
                    a = i;
                    b = j;
                }
            }
        }

        System.out.println(words[a]);
        System.out.println(words[b]);
    }

    static int commonPrefix(String a, String b) {
        int len = Math.min(a.length(), b.length());
        for (int i = 0; i < len; i++) {
            if (a.charAt(i) != b.charAt(i)) return i;
        }
        return len;
    }
}

//bufferedreader 사용

package baekjoon;

import java.util.*;
import java.io.*;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		List<String> list = new ArrayList<>();
		int count = 0;
		String word = "", temp = "";
		int max_count = 0;
		int top_i = 0, top_j = 0;
		
		for(int i = 0; i < N; i++) {
			word = br.readLine();
			if(list.contains(word))
				continue;
			list.add(word);
		}
		
		for(int i = 0; i < list.size(); i++) {
			temp = list.get(i);
			for(int j = i + 1; j < list.size(); j++) {
				int comp = Math.min(temp.length(), list.get(j).length());
				for(int z = 0; z < comp; z++) {
					if(temp.charAt(z) == list.get(j).charAt(z))
						count++;
					else 
						break;
				}
				
				if(count > max_count) {
					max_count = count;
					top_i = i;
					top_j = j;
				}
				count = 0;
			}
		}
		
		System.out.println(list.get(top_i));
		System.out.println(list.get(top_j));
		
	}
}
