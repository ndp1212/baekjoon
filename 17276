//https://www.acmicpc.net/problem/17276
package baekjoon;

import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();
        
        int T = Integer.parseInt(br.readLine());
        int[][] board;

        for (int t = 0; t < T; t++) {
            String[] setting = br.readLine().split(" ");
            int n = Integer.parseInt(setting[0]);
            int rotation = Integer.parseInt(setting[1]);
            int r = (rotation < 0 ? (rotation + 360) : rotation) / 45;
            board = new int[n][n];

            for (int i = 0; i < n; i++) {
                String[] input = br.readLine().split(" ");
                for (int j = 0; j < n; j++) {
                    board[i][j] = Integer.parseInt(input[j]);
                }
            }

            for (int i = 0; i < Math.abs(r); i++) {
                if (rotation > 0)
                    for_rotate(board);
                else
                    rev_rotate(board);
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    sb.append(board[i][j]).append(" ");
                }
                sb.append("\n");
            }
        }
        System.out.println(sb);
    }

    static void for_rotate(int[][] arr) {
        int n = arr.length;
        int[] copy = new int[n];

        for (int i = 0; i < n; i++) {
            copy[i] = arr[i][n / 2];
        }

        for (int i = 0; i < n; i++) {
            arr[i][n / 2] = arr[i][i];
            arr[i][i] = arr[n / 2][i];
            arr[n / 2][i] = arr[n - i - 1][i];
            arr[n - i - 1][i] = arr[n - i - 1][n / 2];
            arr[n - i - 1][n / 2] = arr[n - i - 1][n - i - 1];
            arr[n - i - 1][n - i - 1] = arr[n / 2][n - i - 1];
            arr[n / 2][n - i - 1] = arr[i][n - i - 1];
            arr[i][n - i - 1] = copy[i];
        }
    }

    static void rev_rotate(int[][] arr) {
        int n = arr.length;
        int[] copy = new int[n];

        for (int i = 0; i < n; i++) {
            copy[i] = arr[i][n / 2];
        }

        for (int i = 0; i < n; i++) {
            arr[i][n / 2] = arr[i][n - i - 1];
            arr[i][n - i - 1] = arr[n / 2][n - i - 1];
            arr[n / 2][n - i - 1] = arr[n - i - 1][n - i - 1];
            arr[n - i - 1][n - i - 1] = arr[n - i - 1][n / 2];
            arr[n - i - 1][n / 2] = arr[n - i - 1][i];
            arr[n - i - 1][i] = arr[n / 2][i];
            arr[n / 2][i] = arr[i][i];
            arr[i][i] = copy[i];
        }
    }
}
